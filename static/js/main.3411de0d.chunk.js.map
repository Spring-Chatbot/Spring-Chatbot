{"version":3,"sources":["firebase.ts","firebaseData.ts","components/Conversation.tsx","components/therabot.tsx","components/UserLoginBox.tsx","components/Register.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Conversation","phase","id","placeholder","defaultValue","type","onClick","document","getElementById","style","display","auth","signOut","console","log","userComment","value","innerHTML","negative","findHighestScore","list","max","Math","indexOf","greet","farewell","interrupted","nullResponse","emotions","userIsAngry","userIsSad","userIsScared","userIsDepressed","statement","toUpperCase","replace","words","split","length","randomRank","floor","random","includes","search","feelingChoice","feelingScores","e","w","k","responseScores","u","responseChoice","therabot","$","scrollTop","scrollHeight","val","UserLoginBox","history","useHistory","nextPath","path","push","onAuthStateChanged","firebaseUser","className","getValue","email","pass","signInWithEmailAndPassword","then","result","catch","message","Register","createUserWithEmailAndPassword","App","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3411de0d.chunk.js","sourcesContent":["import firebase from \"firebase\";\nimport firebaseConfig from \"./firebaseData\";\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nexport default firebase;\n","export default {\n    apiKey: \"AIzaSyD_GOu9Qy1FFP0eKKZOE6t4lzAegqHwvvw\",\n    authDomain: \"cs-4800-backend-server.firebaseapp.com\",\n    databaseURL: \"https://cs-4800-backend-server.firebaseio.com/\",\n    projectId: \"cs-4800-backend-server\",\n    storageBucket: \"cs-4800-backend-server.appspot.com\",\n    messagingSenderId: \"767965540098\",\n    appId: \"1:767965540098:web:77527f43aec0d7d07a9c1b\",\n    measurementId: \"G-GKYHGS54QX\"\n};\n","import React from \"react\";\nimport \"../css/ConversationStyle.css\";\nimport $ from \"jquery\";\nimport {therabot} from \"./therabot\";\nimport firebase from '../firebase';\n\nexport default function Conversation() {\n\tlet phase = 1;\n\n    function thankUser() {\n            document.getElementById(\"ContainerBox\")!.style.display = \"none\";\n            document.getElementById(\"Buttons\")!.style.display = \"none\";\n            document.getElementById(\"Welcome\")!.style.display = \"none\";\n            document.getElementById(\"thankyou\")!.style.display = \"block\";\n\t\t\t\t\t\tfirebase.auth().signOut();\n\t\t\t\t\t\tconsole.log(\"signout\");\n    }\n\n    function appendUserConvo() {\n        const userComment = (document.getElementById(\n            \"ConvoUserInput\"\n        )! as HTMLTextAreaElement).value;\n\t\t\t\tdocument.getElementById(\"ConvoHistory\")!.innerHTML +=\n\t\t\t\t\t\"<p id='UserComment'>\" + userComment + \"</p>\";\n\t\t\t\tphase = therabot(userComment,phase);\n\t\t\n        $(\"#ConvoHistory\").scrollTop($(\"#ConvoHistory\")[0].scrollHeight);\n        $(\"#ConvoUserInput\").val(\"\");\n    }\n\n    return (\n        <div>\n            <h1 id=\"Welcome\">Welcome to Therabot</h1>\n            <div id=\"ContainerBox\">\n                <textarea\n                    id=\"ConvoUserInput\"\n                    placeholder=\"What's on your mind?\"\n                    defaultValue={\"\"}\n                />\n                <div id=\"ConvoHistory\" />\n                <div id=\"Buttons\">\n                    <button id=\"LeaveRoom\" type=\"button\" onClick={thankUser}>\n                        Leave Chatroom\n                    </button>\n                    <button\n                        id=\"UserSubmitConvo\"\n                        type=\"button\"\n                        onClick={appendUserConvo}\n                    >\n                        Submit\n                    </button>\n                </div>\n            </div>\n            <div id=\"thankyou\" style={{ display: \"none\" }}>\n                <p>Thank you for using Therabot!</p>\n            </div>\n        </div>\n    );\n}\n","export const therabot = (userComment: string, phase: number)=>{\r\n\tlet negative = 0;\r\n\t\r\n    function findHighestScore(list : number[]) : [number, number] {\r\n\t  const max = Math.max(...list);\r\n\t  return [max, list.indexOf(max)]\r\n\t}\r\n    \r\n\t\tconst greet = [\"Hello!\", \"Hi!\", \"Greetings!\", \"Hola!\", \"Good day to you!\", \" Hey, how are you?\"];\r\n\t\tconst farewell = [\"Good Bye!\", \"Bye!\", \"See you later!\", \"Lets talk again sometime!\", \"See you soon!\", \"Farewell!\", \"Adios!\"];\r\n\t\tconst interrupted = [\"Leaving so soon?\", \"Awe, we were getting somewhere.\", \"Already leaving?\"];\r\n\t\tconst nullResponse = [\"I didn't catch that. Can you say that again?\", \"Did you say something?\", \"Hello? Are you there?\"];\r\n\r\n\t\t//All emotions and their keywords\r\n\t\tconst happy = [\"happy\", \"joy\", \"joyful\", \"cheerful\", \"chipper\", \"excited\", \"relaxed\"];\r\n\t\tconst angry = [\"mad\", \"anger\", \"angry\", \"furious\", \"agitated\", \"resentful\", \"infuriated\", \"rage\", \"enraged\", \"indignant\"];\r\n\t\tconst sad = [\"sad\", \"blue\", \"down\", \"despondent\", \"discouraged\", \"gloomy\", \"sorrow\", \"sorrowful\", \"miserable\", \"unhappy\"];\r\n\t\tconst fear = [\"scared\", \"fear\", \"fearful\", \"anxious\", \"nervous\", \"frightened\", \"terrified\"];\r\n\t\tconst depression = [\"depressed\", \"downcast\", \"unmotivated\", \"uninterested\", \"disinterested\"];\r\n\t\tconst emotions = [happy, angry, sad, fear, depression];\r\n\r\n\t\t//Reasons for Anger\r\n\t\tconst angryUserIsFrustrated = [\"frustrated\", \"annoyed\", \"irritated\", \"jilted\", \"unsatisfied\"];\r\n\t\tconst angryUserIsGrieving = [\"grieving\", \"mourning\", \"lost\", \"loss\", \"lament\"];\r\n\t\tconst angryUserHasAngerIssues = [\"always\", \"constantly\", \"constant\", \"often\", \"usually\"];\r\n\t\tconst userIsAngry = [angryUserIsFrustrated, angryUserIsGrieving, angryUserHasAngerIssues];\r\n\r\n\t\t//Reasons for Sadness\r\n\t\tconst sadUserIsDepressed = [\"depressed\", \"unmotivated\", \"despondent\", \"discouraged\", \"downcast\", \"gloomy\", \"dejected\", \"crestfallen\"];\r\n\t\tconst sadUserIsGrieving = [\"grieving\", \"loss\", \"lost\", \"mourning\", \"lament\"];\r\n\t\tconst sadUserHasNoReason = [\"unsure\", \"uncertain\"];\r\n\t\tconst userIsSad = [sadUserHasNoReason, sadUserIsDepressed, sadUserIsGrieving];\r\n\r\n\t\t//Reasons for Fear\r\n\t\tconst scaredUserHasPanicAttack = [\"sudden\", \"suddenly\", \"nowhere\"];\r\n\t\tconst scaredUserIsAnxious = [\"anxious\", \"nervous\", \"restless\", \"distressed\", \"worried\", \"dread\"];\r\n\t\tconst scaredUserIsPhobic = [\"hate\", \"scared\", \"dislike\"];\r\n\t\tconst userIsScared = [scaredUserHasPanicAttack, scaredUserIsAnxious, scaredUserIsPhobic];\r\n\r\n\t\t//Reasons for Depression\r\n\t\tconst depressedUserHasPastTrauma = [\"loss\", \"rape\", \"ptsd\", \"hurt\", \"attacked\", \"assaulted\", \"abuse\", \"abused\", \"hit\", \"beaten\", \"beat\"];\r\n\t\tconst depressedUserInheritedDepression = [\"family\", \"ancestors\", \"relatives\", \"uncle\", \"aunt\", \"parents\", \"dad\", \"father\", \"mom\", \"mother\", \"inherited\", \"genes\", \"genetics\", ];\r\n\t\tconst depressedUserAbusesDrugs = [\"drugs\", \"meth\", \"methamphetamine\", \"cocain\", \"crack\", \"tobacco\", \"smoke\", \"weed\", \"inject\", \"snort\"];\r\n\t\tconst userIsDepressed = [depressedUserHasPastTrauma, depressedUserInheritedDepression, depressedUserAbusesDrugs];\r\n\r\n        const statement = userComment.toUpperCase().replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\");\r\n        const words = statement.split(\" \");\r\n\r\n        if (phase==0) {\r\n            document.getElementById(\"ConvoHistory\")!.innerHTML += \r\n\t\t\t\t\"<p id='TherabotComment'>Oh, you have something else to say?</p>\";\r\n\t\t\tphase = 1;\r\n        }\r\n        else if (words.length==0) {\r\n            const randomRank = Math.floor((Math.random() * nullResponse.length));\r\n            document.getElementById(\"ConvoHistory\")!.innerHTML += \r\n\t\t\t\t\"<p id='TherabotComment'>\"+nullResponse[randomRank]+\"</p>\";\r\n        }\r\n        else if (words.includes(\"HELLO\") || words.includes(\"HI\")) {\r\n            const randomRank = Math.floor((Math.random() * greet.length));\r\n            document.getElementById(\"ConvoHistory\")!.innerHTML += \r\n\t\t\t\t\"<p id='TherabotComment'>\"+greet[randomRank]+\"</p>\";\r\n        }\r\n        else if (words.includes(\"GOODBYE\") || words.includes(\"BYE\") || words.includes(\"FAREWELL\") || userComment.search(\"See you later\")>-1) {\r\n\t\t\tif (phase!=1) {\r\n                const randomRank = Math.floor((Math.random() * interrupted.length));\r\n                document.getElementById(\"ConvoHistory\")!.innerHTML += \r\n\t\t\t\t\t\"<p id='TherabotComment'>\"+interrupted[randomRank]+\"</p>\";\r\n                phase = 0;\r\n            }\r\n            else {\r\n                const randomRank = Math.floor((Math.random() * farewell.length));\r\n                document.getElementById(\"ConvoHistory\")!.innerHTML += \r\n\t\t\t\t\t\"<p id='TherabotComment'>\"+farewell[randomRank]+\"</p>\";\r\n            }\r\n\t\t\tphase = 0;\r\n        }\r\n        else if (phase==1) {           \r\n            let feelingChoice;                \r\n            \r\n            let feelingScores = [0,0,0,0,0];\r\n            for (let e in emotions) { \r\n                negative = 0; \r\n                for (let w in words) {\r\n                    if (words[w]==\"NOT\" || words[w]==\"DON'T\") {\r\n                        negative += 1;\r\n                    }                \r\n                    else {\r\n\t\t\t\t\t\tfor (let e in emotions) {\r\n\t\t\t\t\t\t\tfor (let k in emotions[e]) {\r\n\t\t\t\t\t\t\t\tif (words[w]==emotions[e][k].toUpperCase()) {                        \r\n\t\t\t\t\t\t\t\t\tif (negative>0) {\r\n\t\t\t\t\t\t\t\t\t\tfeelingScores[e]--;\r\n\t\t\t\t\t\t\t\t\t\tnegative--;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tfeelingScores[e]++;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n                }\r\n            }\r\n            feelingChoice = findHighestScore(feelingScores);\r\n            if (feelingChoice[0]==0) {\r\n                document.getElementById(\"ConvoHistory\")!.innerHTML += \r\n\t\t\t\t\t\"<p id='TherabotComment'>I'm not sure what you mean. Can you rephrase that?</p>\";\r\n            }\r\n            else {\r\n                switch(feelingChoice[1]) {\r\n                    case 0: \r\n                        phase = 2;\r\n                        document.getElementById(\"ConvoHistory\")!.innerHTML +=\r\n\t\t\t\t\t\t\t\"<p id='TherabotComment'>Describe your happiness.</p>\";\r\n                        break;\r\n                    case 1: \r\n                        phase = 3;\r\n                        document.getElementById(\"ConvoHistory\")!.innerHTML +=\r\n\t\t\t\t\t\t\t\"<p id='TherabotComment'>Describe your anger. What is making you angry?</p>\";\r\n                        break;\r\n                    case 2: \r\n                        phase = 4;\r\n                        document.getElementById(\"ConvoHistory\")!.innerHTML +=\r\n\t\t\t\t\t\t\t\"<p id='TherabotComment'>Describe your sadness. What is making you sad?</p>\";\r\n                        break;\r\n                    case 3: \r\n                        phase = 5;\r\n                        document.getElementById(\"ConvoHistory\")!.innerHTML +=\r\n\t\t\t\t\t\t\t\"<p id='TherabotComment'>Describe your fear. What is scaring you?</p>\";\r\n                        break;\r\n                    case 4:\r\n                        phase = 6;\r\n                        document.getElementById(\"ConvoHistory\")!.innerHTML +=\r\n\t\t\t\t\t\t\t\"<p id='TherabotComment'>Depression is serious, but can be fixed. Can you describe the circustances surrounding your depression?</p>\";\r\n                        break;\r\n                }\r\n            }    \r\n        }\r\n        //Why is user happy?\r\n        else if (phase==2) {\r\n            if (statement.search(\"JUST KIDDING\")>-1 || statement.search(\"NOT HAPPY\")>-1) {\r\n                phase = 1;\r\n                document.getElementById(\"ConvoHistory\")!.innerHTML +=\r\n\t\t\t\t\t\"<p id='TherabotComment'>That's too bad. How do you actually feel?</p>\";\r\n            }\r\n            else {\r\n                phase = 1;\r\n                document.getElementById(\"ConvoHistory\")!.innerHTML +=\r\n\t\t\t\t\t\"<p id='TherabotComment'>I am glad you feel this way!</p>\";\r\n            }\r\n        }\r\n        //Why is user angry?\r\n        else if (phase==3) {            \r\n            if (statement.search(\"JUST KIDDING\")>-1 || statement.search(\"NOT ANGRY\")>-1) {\r\n                phase = 1;\r\n                document.getElementById(\"ConvoHistory\")!.innerHTML +=\r\n\t\t\t\t\t\"<p id='TherabotComment'>Alright then. How do you actually feel?</p>\";\r\n            }\r\n            else {\r\n                let responseScores = [0,0,0];\r\n                for (let u in userIsAngry) { \r\n                    negative = 0; \r\n                    for (let w in words) {               \r\n                        for (let k in userIsAngry[u]) {                                                            \r\n                            if (words[w]==userIsAngry[u][k].toUpperCase()) {                        \r\n                                responseScores[u]++;\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }                \r\n                const responseChoice = findHighestScore(responseScores);\r\n                if (responseChoice[0]==0) {\r\n                    document.getElementById(\"ConvoHistory\")!.innerHTML +=\r\n\t\t\t\t\t\t\"<p id='TherabotComment'>I'm not sure what you mean.</p>\";\r\n                }\r\n                else {\r\n                    switch(responseChoice[1]) {\r\n                        case 0:\r\n                            document.getElementById(\"ConvoHistory\")!.innerHTML +=\r\n\t\t\t\t\t\t\t\t\"<p id='TherabotComment'>You seem to be frustrated.</p>\";\r\n                            phase = 0;\r\n                            break;\r\n                        case 1:\r\n                            document.getElementById(\"ConvoHistory\")!.innerHTML +=\r\n\t\t\t\t\t\t\t\t\"<p id='TherabotComment'>You seem to be grieving.</p>\";\r\n                            phase = 0;\r\n                            break;\r\n                        case 2:\r\n                            document.getElementById(\"ConvoHistory\")!.innerHTML +=\r\n\t\t\t\t\t\t\t\t\"<p id='TherabotComment'>You seem to have anger issues.</p>\";\r\n                            phase = 0;\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //Why is user sad?\r\n        else if (phase==4) {\r\n            if (statement.search(\"JUST KIDDING\")>-1 || statement.search(\"NOT SAD\")>-1) {\r\n                phase = 1;\r\n                document.getElementById(\"ConvoHistory\")!.innerHTML +=\r\n\t\t\t\t\t\"<p id='TherabotComment'>Alright then. How do you actually feel?</p>\";\r\n            }\r\n            else {\r\n                let responseScores = [0,0,0];\r\n                for (let u in userIsSad) { \r\n                    negative = 0; \r\n                    for (let w in words) {               \r\n                        for (let k in userIsSad[u]) {                                                            \r\n                            if (words[w]==userIsSad[u][k].toUpperCase()) {                        \r\n                                responseScores[u]++;\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }\r\n                const responseChoice = findHighestScore(responseScores);\r\n                if (responseChoice[0]==0) {\r\n                    document.getElementById(\"ConvoHistory\")!.innerHTML +=\r\n\t\t\t\t\t\t\"<p id='TherabotComment'>I'm not sure what you mean.</p>\";\r\n                }\r\n                else {\r\n                    switch(responseChoice[1]) {\r\n                        case 0:\r\n                            document.getElementById(\"ConvoHistory\")!.innerHTML +=\r\n\t\t\t\t\t\t\t\t\"<p id='TherabotComment'>You seem to have medical issues.</p>\";\r\n                            phase = 0;\r\n                            break;\r\n                        case 1:\r\n                            phase = 6;\r\n                            document.getElementById(\"ConvoHistory\")!.innerHTML +=\r\n\t\t\t\t\t\t\t\t\"<p id='TherabotComment'>Your sadness might actually be depression. Can you describe the circumstances surrounding your depression?</p>\";\r\n                            break;\r\n                        case 2:\r\n                            document.getElementById(\"ConvoHistory\")!.innerHTML +=\r\n\t\t\t\t\t\t\t\t\"<p id='TherabotComment'>You seem to be grieving.</p>\";\r\n                            phase = 0;\r\n                            break;\r\n                    }\r\n                } \r\n            }\r\n        }\r\n        //Why is user scared?\r\n        else if (phase==5) {\r\n            if (statement.search(\"JUST KIDDING\")>-1 || statement.search(\"NOT SCARED\")>-1) {\r\n                phase = 1;\r\n                document.getElementById(\"ConvoHistory\")!.innerHTML +=\r\n\t\t\t\t\t\"<p id='TherabotComment'>Alright then. How do you actually feel?</p>\";\r\n            }\r\n            else {\r\n                let responseScores = [0,0,0];\r\n                for (let u in userIsScared) { \r\n                    negative = 0; \r\n                    for (let w in words) {               \r\n                        for (let k in userIsScared[u]) {                                                            \r\n                            if (words[w]==userIsScared[u][k].toUpperCase()) {                        \r\n                                responseScores[u]++;\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }\r\n                const responseChoice = findHighestScore(responseScores);\r\n                if (responseChoice[0]==0) {\r\n                    document.getElementById(\"ConvoHistory\")!.innerHTML +=\r\n\t\t\t\t\t\t\"<p id='TherabotComment'>I'm not sure what you mean.</p>\";\r\n                }\r\n                else {\r\n                    switch(responseChoice[1]) {\r\n                        case 0:\r\n                            document.getElementById(\"ConvoHistory\")!.innerHTML +=\r\n\t\t\t\t\t\t\t\t\"<p id='TherabotComment'>You seem to have panic attacks.</p>\";\r\n                            phase = 0;\r\n                            break;\r\n                        case 1:\r\n                            document.getElementById(\"ConvoHistory\")!.innerHTML +=\r\n\t\t\t\t\t\t\t\t\"<p id='TherabotComment'>You seem to be anxious.</p>\";\r\n                            phase = 0;\r\n                            break;\r\n                        case 2:\r\n                            document.getElementById(\"ConvoHistory\")!.innerHTML +=\r\n\t\t\t\t\t\t\t\t\"<p id='TherabotComment'>You seem to have a phobia.</p>\";\r\n                            phase = 0;\r\n                            break;\r\n                    }\r\n                } \r\n            }\r\n        }\r\n        //Why is user depressed?\r\n        else if (phase==6) {\r\n            if (statement.search(\"JUST KIDDING\")>-1 || statement.search(\"NOT DEPRESSED\")>-1) {\r\n                phase = 1;\r\n                document.getElementById(\"ConvoHistory\")!.innerHTML +=\r\n\t\t\t\t\t\"<p id='TherabotComment'>Alright then. How do you actually feel?</p>\";\r\n            }\r\n            else {\r\n                let responseScores = [0,0,0];\r\n                for (let u in userIsDepressed) { \r\n                    negative = 0; \r\n                    for (let w in words) {               \r\n                        for (let k in userIsDepressed[u]) {                                                            \r\n                            if (words[w]==userIsDepressed[u][k].toUpperCase()) {                        \r\n                                responseScores[u]++;\r\n                            }\r\n                        }\r\n    \r\n                    }\r\n                }\r\n                const responseChoice = findHighestScore(responseScores);\r\n                if (responseChoice[0]==0) {\r\n                    document.getElementById(\"ConvoHistory\")!.innerHTML +=\r\n\t\t\t\t\t\t\"<p id='TherabotComment'>I'm not sure what you mean</p>\";\r\n                }\r\n                else {\r\n                    switch(responseChoice[1]) {\r\n                        case 0:\r\n                            document.getElementById(\"ConvoHistory\")!.innerHTML +=\r\n\t\t\t\t\t\t\t\t\"<p id='TherabotComment'>You might have some unresolved past trauma. It might be beneficial to discuss these with a therapist or loved one.</p>\";\r\n                            phase = 0;\r\n                            break;\r\n                        case 1:\r\n                            document.getElementById(\"ConvoHistory\")!.innerHTML +=\r\n\t\t\t\t\t\t\t\t\"<p id='TherabotComment'>Depression may run in your family. It might be best to seek medical help.</p>\";\r\n                            phase = 0;\r\n                            break;\r\n                        case 2:\r\n                            document.getElementById(\"ConvoHistory\")!.innerHTML +=\r\n\t\t\t\t\t\t\t\t\"<p id='TherabotComment'>Your depression may be linked to your drug use. Thirty-percent of drug users experience depression. It might be best to stop use until you recover from your depression.</p>\";\r\n                            phase = 0;\r\n                            break;\r\n                    }\r\n                } \r\n            }\r\n        }\r\n\treturn phase;\r\n}","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../css/IndexStyle.css\";\nimport firebase from '../firebase';\n\nexport default function UserLoginBox() {\n\n    let history = useHistory();\n    function nextPath(path: any) {\n        history.push(path);\n    }\n\t\n\tfirebase.auth().onAuthStateChanged(firebaseUser => {\n\t\tif(firebaseUser) {\n\t\t\tconsole.log(firebaseUser);\n\t\t\t// TODO: method to not allow random ppl to type to bot\n\t\t\t// without signing in first\n\t\t} else {\n\t\t\tconsole.log('No user signed in currently');\n\t\t}\n\t});\n\n    function CheckSignIn() {\n\t\tconst getValue = (id: string) =>\n            (document.getElementById(id)! as HTMLInputElement).value;\n\t\tconst email = getValue(\"email\");\n\t\tconst pass = getValue(\"password\");\n\t\t\n        if (email === \"\" || pass === \"\") {\n\t\t\tdocument.getElementById(\"SignInNotSuccess\")!.innerHTML = \n\t\t\t\t\"Cannot sign in. Please make sure all fields are filled out.\";\n            document.getElementById(\"SignInNotSuccess\")!.style.display =\n                \"block\";\n        } else {\n\t\t\t// Sign In\n\t\t\tconst promise = firebase.auth().signInWithEmailAndPassword(email,pass);\n\t\t\t\n\t\t\tpromise.then(result => {\n\t\t\t\tdocument.getElementById(\"SignInNotSuccess\")!.style.display = \n\t\t\t\t\t\"none\";\n\t\t\t\tnextPath(\"/talk\");\n\t\t\t}).catch(e => {\n\t\t\t\tdocument.getElementById(\"SignInNotSuccess\")!.innerHTML = \n\t\t\t\t\te.message;\n\t\t\t\tdocument.getElementById(\"SignInNotSuccess\")!.style.display =\n\t\t\t\t\t\"block\";\n\t\t\t});\n        }\n    }\n\n    return (\n        <div>\n            <h1>Welcome to Therabot</h1>\n            <div id=\"MainBox\">\n                <div id=\"MainBoxBanner\">\n                    <div id=\"MainTextBox\">User Login</div>\n                </div>\n                <input type=\"text\" id=\"email\" placeholder=\"Enter Email Address\" />\n                <input type=\"text\" id=\"password\" placeholder=\"Enter Password\" />\n                <div id=\"UserLoginButtons\">\n                    <button\n                        className=\"RegisterButton\"\n                        type=\"button\"\n                        onClick={() => nextPath(\"/register\")}\n                    >\n                        Click here to register\n                    </button>\n                    <button\n                        className=\"SignInButton\"\n                        type=\"submit\"\n                        onClick={CheckSignIn}\n                    >\n                        Sign in\n                    </button>\n                </div>\n                <div id=\"SignInNotSuccess\" style={{ display: \"none\" }}>\n                    \n                </div>\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../css/RegisterPageStyle.css\";\nimport firebase from '../firebase';\n\nexport default function Register() {\n\n    let history = useHistory();\n    function nextPath(path: any) {\n        history.push(path);\n    }\n\n    function checkSuccessReg() {\n        const getValue = (id: string) =>\n            (document.getElementById(id)! as HTMLInputElement).value;\n\t\n\t\t\n\t\tconst email = getValue(\"Email\");\n\t\tconst pass = getValue(\"Password\");\n\n        if (email === \"\" || pass === \"\") {\n            document.getElementById(\"success\")!.style.display = \"none\";\n\t\t\tdocument.getElementById(\"notsuccess\")!.innerHTML = \n\t\t\t\t\"Registration was not successful. Please make sure all fields are filled out.\";\n            document.getElementById(\"notsuccess\")!.style.display = \"block\";\n        }\n\t\telse {\n\t\t\t// Create user\n\t\t\tconst auth = firebase.auth();\n\t\t\tconst promise = auth.createUserWithEmailAndPassword(email,pass);\n\t\t\tpromise.then(result => {\n\t\t\t\tdocument.getElementById(\"success\")!.style.display = \"block\";\n\t\t\t\tdocument.getElementById(\"BackToLogin\")!.style.display = \"block\";\n\t\t\t\tdocument.getElementById(\"notsuccess\")!.style.display = \"none\";\n\t\t\t\tdocument.getElementById(\"DoneButton\")!.style.display = \"none\";\n\t\t\t}).catch(e => {\n\t\t\t\tdocument.getElementById(\"success\")!.style.display = \"none\";\n\t\t\t\tdocument.getElementById(\"notsuccess\")!.innerHTML = e.message;\n\t\t\t\tdocument.getElementById(\"notsuccess\")!.style.display = \"block\";\n\t\t\t});\n        }\n\n    }\n\n    return (\n        <div>\n            <h1>Welcome to Therabot</h1>\n            <div id=\"MainBox\">\n                <div id=\"MainBoxBanner\">\n                    <div id=\"MainTextBox\">Register</div>\n                </div>\n                <input type=\"text\" id=\"Email\" placeholder=\"Enter an email address\" />\n                <input type=\"text\" id=\"Password\" placeholder=\"Enter a password\" />\n                <div id=\"buttonElement\"><button id=\"DoneButton\" type=\"button\" onClick={checkSuccessReg}>\n                    Done\n                </button></div>\n                <div id=\"success\" style={{ display: \"none\" }}>\n                    Success! You are now registered to use Therabot!\n                </div>\n                <div id=\"notsuccess\" style={{ display: \"none\" }}>\n                    \n                </div>\n                <button\n                    id=\"BackToLogin\"\n                    type=\"button\"\n                    onClick={() => nextPath(\"/\")}\n                    style={{ display: \"none\" }}\n                >\n                    Login\n                </button>\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { Route, HashRouter } from \"react-router-dom\";\nimport Conversation from \"./components/Conversation\";\nimport UserLoginBox from \"./components/UserLoginBox\";\nimport Register from \"./components/Register\";\nimport \"./css/MainStyle.css\";\n\nconst App = () => {\n    return (\n        <HashRouter>\n            <Route exact path=\"/\" component={UserLoginBox} />\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/talk\" component={Conversation} />\n        </HashRouter>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" }\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}